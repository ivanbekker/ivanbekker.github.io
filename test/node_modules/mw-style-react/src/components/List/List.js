import PropTypes from 'prop-types';
import React, {PureComponent} from 'react';
import injectSheet from 'react-jss';
import cn from 'clsx';
import styles from './List.style';

@injectSheet(styles)
class List extends PureComponent {
  render() {
    const {classes, id, className, visibility, children, activeItem, offset, onClick} = this.props;

    return (
      <div
        id={id}
        className={cn(
          className,
          classes.list,
          {hidden: visibility === 'hidden'},
          {disabled: visibility === 'disabled'},
        )}
      >
        {React.Children.map(children, child =>
          React.cloneElement(child, {
            rootId: id,
            activeItem,
            offset,
            onClick,
          }),
        )}
      </div>
    );
  }
}

List.defaultProps = {
  visibility: 'visible',
  offset: 12,
  onClick: () => {
  },
};

List.propTypes = {
  classes: PropTypes.object,
  /** List's options */
  children: PropTypes.node.isRequired,
  /** menu's visibility */
  visibility: PropTypes.oneOf(['visible', 'disabled', 'hidden']).isRequired,
  /** List's id */
  id: PropTypes.string,
  /** additional external class name */
  className: PropTypes.string,
  /** active item */
  activeItem: PropTypes.string,
  /** offset of list */
  offset: PropTypes.number,
  /** onClick callback */
  onClick: PropTypes.func,
};

export default List;
