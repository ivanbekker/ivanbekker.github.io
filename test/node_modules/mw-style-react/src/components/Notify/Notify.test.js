import React from 'react';
import renderer from 'react-test-renderer';
import ThemeProvider from '../ThemeProvider';
import Notify from './Notify';
import theme from '../themes/corezoid_light';

test('Small Notify simple test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'small'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Large Notify simple test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Disabled Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'small'}
        visibility={'disabled'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Hidden Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'small'}
        visibility={'hidden'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Error Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'small'}
        error={true}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Icon Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'small'}
        icon={'copy'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Title Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        title={'title'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Border(false) Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        border={false}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Border(true) Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        border={true}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('BorderRadius(true) Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        borderRadius={true}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('BorderRadius(false) Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        borderRadius={false}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Background Color Notify test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <Notify
        text={'text'}
        size={'large'}
        bgColor={'#000000'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});
