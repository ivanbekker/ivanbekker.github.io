'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactClickOutside = require('react-click-outside');

var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _Menu = require('./Menu.style');

var _Menu2 = _interopRequireDefault(_Menu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Menu = (_dec = (0, _reactJss2.default)(_Menu2.default), _dec(_class = (0, _reactClickOutside2.default)(_class = function (_PureComponent) {
  (0, _inherits3.default)(Menu, _PureComponent);

  function Menu(props) {
    (0, _classCallCheck3.default)(this, Menu);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Menu.__proto__ || (0, _getPrototypeOf2.default)(Menu)).call(this, props));

    _this.state = { visibility: props.visibility };
    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Menu, [{
    key: 'handleClick',
    value: function handleClick(value) {
      var _props = this.props,
          id = _props.id,
          visibility = _props.visibility;

      if (visibility === 'disabled') return;
      var error = false;
      this.props.onClick({ id: id, value: value, error: error });
    }

    // Handler for click outside of component

  }, {
    key: 'handleClickOutside',
    value: function handleClickOutside() {
      var visibility = this.state.visibility;
      var type = this.props.type;

      if (type === 'sideBar') return;
      if (visibility === 'visible') {
        this.setState({ visibility: 'hidden' });
        this.props.onClose();
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (this.props.visibility !== nextProps.visibility) {
        this.setState({ visibility: nextProps.visibility });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props2 = this.props,
          id = _props2.id,
          classes = _props2.classes,
          className = _props2.className,
          children = _props2.children,
          width = _props2.width,
          activeItem = _props2.activeItem,
          openType = _props2.openType,
          type = _props2.type,
          visProps = _props2.visibility,
          onMouseMove = _props2.onMouseMove,
          size = _props2.size;
      var visState = this.state.visibility;
      // Корректировка свойства visibility, когда контроль отображения меню
      // должен осуществлять только родительский компонент, то ставим тип меню slaveMenu

      var correctVisibility = type === 'slaveMenu' ? visProps : visState;
      return _react2.default.createElement(
        'div',
        {
          id: id,
          className: (0, _clsx2.default)(className, classes.menu, classes[size], { openUp: openType === 'top' }, { hidden: correctVisibility === 'hidden' }, { disabled: correctVisibility === 'disabled' }),
          onMouseMove: onMouseMove,
          style: { maxWidth: width }
        },
        _react2.default.Children.map(children, function (child) {
          var params = { onClick: _this2.handleClick, size: size };
          if (activeItem && child.type.displayName === 'Jss(MenuItem)') {
            params.activeItem = activeItem;
          }
          return _react2.default.cloneElement(child, params);
        })
      );
    }
  }]);
  return Menu;
}(_react.PureComponent)) || _class) || _class);


Menu.defaultProps = {
  children: null,
  id: null,
  visibility: 'visible',
  error: false,
  type: 'menu',
  onClick: function onClick() {},
  onClose: function onClose() {},
  onMouseMove: function onMouseMove() {},
  size: 'medium'
};

Menu.propTypes = {
  classes: _propTypes2.default.object,
  /** menu's visibility */
  visibility: _propTypes2.default.oneOf(['visible', 'disabled', 'hidden']),
  /** menu's options */
  children: _propTypes2.default.node,
  /** menu's type */
  type: _propTypes2.default.oneOf(['menu', 'sideBar', 'slaveMenu']),
  /** menu's type open */
  openType: _propTypes2.default.string,
  /** additional external class name */
  className: _propTypes2.default.string,
  /** menu's id */
  id: _propTypes2.default.string,
  /** menu's width */
  width: _propTypes2.default.number,
  /** active item */
  activeItem: _propTypes2.default.string,
  /** onClick callback */
  onClick: _propTypes2.default.func,
  /** onMouseMove callback */
  onMouseMove: _propTypes2.default.func,
  /** onClose callback */
  onClose: _propTypes2.default.func,
  /** menu's size */
  size: _propTypes2.default.oneOf(['small', 'medium', 'large'])
};

exports.default = Menu;