import PropTypes from 'prop-types';
import React, {PureComponent} from 'react';
import injectSheet from 'react-jss';
import cn from 'clsx';
import styles from './NotifyItem.style';
import Icon from '../../Icon';
import Label from '../../Label';

const AUTO_HIDE_TIMEOUT = 5000;

@injectSheet(styles)
class NotifyItem extends PureComponent {
  constructor(props) {
    super(props);
    this.handleClose = ::this.handleClose;
  }

  handleClose() {
    const {onClose, id} = this.props;
    onClose({id});
  }

  componentDidMount() {
    setTimeout(this.handleClose, AUTO_HIDE_TIMEOUT);
  }

  render() {
    const {id, classes, className, label, icon, type, helperText} = this.props;
    return (
      <div id={id} className={cn(classes.notifyItem, classes[type], className)}>
        <div className={cn(classes.titleContainer)}>
          {icon ? (
            <Icon className={classes.icon} type={icon} size="medium" color={'currentColor'}/>
          ) : null}
          <Label
            className={cn(classes.title)}
            value={label}
            fontSize="medium"
          />
          <Icon
            className={cn(classes.closeIcon)}
            type="close"
            size="micro"
            color={'currentColor'}
            onClick={this.handleClose}
          />
        </div>
        {helperText ? (
          <div className={cn(classes.descriptionContainer)}>
            <Label className={cn(classes.description)} value={helperText} fontSize="medium"/>
          </div>
        ) : null}
      </div>
    );
  }
}

NotifyItem.defaultProps = {
  type: 'normal',
  onClose: () => {
  },
};

NotifyItem.propTypes = {
  classes: PropTypes.object,
  /** additional external class name */
  className: PropTypes.string,
  /** Notify's types */
  type: PropTypes.oneOf(['normal', 'error', 'success']),
  /** Notify's id */
  id: PropTypes.string.isRequired,
  /** Icon element */
  icon: PropTypes.string,
  /** Notify's label */
  label: PropTypes.string.isRequired,
  /** Notify's description */
  helperText: PropTypes.string,
  /** onClose callback */
  onClose: PropTypes.func,
};

export default NotifyItem;
