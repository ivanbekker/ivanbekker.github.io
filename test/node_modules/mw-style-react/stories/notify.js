import React, {PureComponent} from 'react';
import {storiesOf} from '@storybook/react';
import {text, select} from '@storybook/addon-knobs/react';
import Notify from '../src/components/Notify';
import Button from '../src/components/Button';
import NotifyItem from '../src/components/Notify/NotifyItem';
import infoDecorator from '../.storybook/customDecorators/infoDecorator';
import themeDecorator from '../.storybook/customDecorators/themeDecorator';
import iconsList from './helpers/iconList';

const stories = storiesOf('Notify', module);

infoDecorator(stories);
themeDecorator(stories);

const VALUE = [
  {
    id: '1',
    label: 'Notify1',
    helperText: 'Notify1 description',
    type: 'normal',
    icon: 'notification',
  },
  {
    id: '2',
    label: 'Notify2',
    helperText: 'Notify3 description',
    type: 'success',
    icon: 'notification',
  },
  {
    id: '3',
    label: 'Notify3',
    helperText: 'Notify3 description',
    type: 'error',
    icon: 'notification',
  },
  {
    id: '4',
    label: 'Notify4',
    type: 'error',
    icon: 'notification',
  },
  {
    id: '5',
    label:
      'Stu Unger is one of the biggest superstars to have immerged from the professional poker world. Besides being a true poker genius and a three time World Series of Poker',
    type: 'error',
    icon: 'notification',
  },
];
const types = ['normal', 'success', 'error'];

class NotifyExample extends PureComponent {
  constructor(props) {
    super(props);
    this.state = {
      visible: false,
      value: [],
      addButtonDisabled: false,
    };
  }

  addNotifyItem() {
    const {value} = this.state;
    if (value.length < VALUE.length) {
      const newValue = VALUE.slice(0, value.length + 1);
      this.setState({value: newValue, addButtonDisabled: true});
      setTimeout(() => this.addNotifyItem(), 500);
    }
  }

  clearNotifyItems() {
    this.setState({value: [], addButtonDisabled: false});
  }

  handleOnClose({id}) {
    const {value} = this.state;
    const newValue = value.filter(item => item.id !== id);
    this.setState({value: newValue, addButtonDisabled: newValue.length});
    console.log({id});
  }

  render() {
    const {value, addButtonDisabled} = this.state;
    return (
      <div>
        {addButtonDisabled ? (
          <Button label="Clear all" onClick={::this.clearNotifyItems}/>
        ) : (
          <Button label="Add notify items" onClick={::this.addNotifyItem}/>
        )}
        <Notify value={value} onClose={::this.handleOnClose}/>
      </div>
    );
  }
}

stories
  .add('default', () => (
    <div style={{height: '300px'}}>
      <Notify value={VALUE} onClose={({id}) => console.log(id)}/>
    </div>
  ))
  .add('notifyItem', () => (
    <NotifyItem
      id="1"
      label={text('Label', 'Notification title')}
      helperText={text('HelperText', 'Notification description')}
      type={select('Type', types, 'normal')}
      icon={select('Icon', iconsList, 'notification')}
      onClose={({id}) => console.log(id)}
    />
  ))
  .add('NotifyExample', () => <NotifyExample/>);
