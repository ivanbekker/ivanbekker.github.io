import React from 'react';
import renderer from 'react-test-renderer';
import ThemeProvider from '../ThemeProvider';
import ProgressBar from './ProgressBar';
import theme from '../themes/corezoid_light';

test('ProgressBar test type: line', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'line'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('ProgressBar test type: circle', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('ProgressBar test type: circle, variant: loader', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        variant={'loader'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('ProgressBar test type: circle, variant: static', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        variant={'static'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Visibility ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        visibility={'visible'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Hidden ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        visibility={'hidden'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Error ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        error={true}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Percent ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        percent={35}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Percent(120) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        percent={120}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Size(small) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        size={'small'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Size(medium) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        size={'medium'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Size(large) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        size={'large'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Size(xlarge) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        size={'xlarge'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Size(auto) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        size={'auto'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Thickness(micro) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        thickness={'micro'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Thickness(small) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        thickness={'small'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Thickness(medium) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        thickness={'medium'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Thickness(large) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        thickness={'large'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Thickness(xlarge) ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        thickness={'xlarge'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('max, min percent ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        min={0}
        max={100}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Color ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        color={'#000'}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});

test('Count ProgressBar test', () => {
  const component = renderer.create(
    <ThemeProvider theme={theme}>
      <ProgressBar
        type={'circle'}
        count={true}
      />
    </ThemeProvider>
  );
  const tree = component.toJSON();
  expect(tree).toMatchSnapshot();
});
