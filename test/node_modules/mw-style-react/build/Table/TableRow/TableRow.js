'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class, _class2, _temp;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _TableRow = require('./TableRow.style');

var _TableRow2 = _interopRequireDefault(_TableRow);

var _Icon = require('../../Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _utils = require('../../utils/utils');

var _utils2 = _interopRequireDefault(_utils);

var _Divider = require('../../Divider/Divider');

var _Divider2 = _interopRequireDefault(_Divider);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var NESTING_PADDING = 22;

var TableRow = (_dec = (0, _reactJss2.default)(_TableRow2.default), _dec(_class = (_temp = _class2 = function (_PureComponent) {
  (0, _inherits3.default)(TableRow, _PureComponent);

  function TableRow(props) {
    (0, _classCallCheck3.default)(this, TableRow);

    var _this = (0, _possibleConstructorReturn3.default)(this, (TableRow.__proto__ || (0, _getPrototypeOf2.default)(TableRow)).call(this, props));

    _this.state = {
      showNestedChildren: props.showNestedChildren,
      hasNestedChildren: props.size > 0
    };
    _this.handleClick = _this.handleClick.bind(_this);
    _this.handleListIconClick = _this.handleListIconClick.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(TableRow, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var index = this.props.index;
      var hasNestedChildren = this.state.hasNestedChildren;

      if (hasNestedChildren || index > 1) {
        _reactDom2.default.findDOMNode(this.itemRef0).style.paddingLeft = index * NESTING_PADDING + 'px';
      }
    }
  }, {
    key: 'handleListIconClick',
    value: function handleListIconClick(e) {
      e.stopPropagation();
      if (this.context.visibility === 'disabled') return;
      var _props = this.props,
          id = _props.id,
          value = _props.value,
          visibility = _props.visibility,
          nestedChildren = _props.nestedChildren;

      if (visibility === 'disabled') return;
      var showNestedChildren = !this.state.showNestedChildren;
      this.setState({
        showNestedChildren: showNestedChildren
      });
      this.props.onChange({ id: id, value: value, showNestedChildren: showNestedChildren, nestedChildren: nestedChildren });
    }
  }, {
    key: 'handleClick',
    value: function handleClick() {
      if (this.context.visibility === 'disabled') return;
      var _props2 = this.props,
          id = _props2.id,
          value = _props2.value;

      var error = false;
      this.props.onClick({ id: id, value: value, error: error });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props3 = this.props,
          className = _props3.className,
          classes = _props3.classes,
          visibility = _props3.visibility,
          children = _props3.children,
          renderNestedChildren = _props3.renderNestedChildren,
          nestedChildren = _props3.nestedChildren,
          index = _props3.index,
          active = _props3.active,
          columnSize = _props3.columnSize,
          id = _props3.id;
      var _state = this.state,
          showNestedChildren = _state.showNestedChildren,
          hasNestedChildren = _state.hasNestedChildren;
      var paddingSize = this.context.paddingSize;


      return _react2.default.createElement(
        'div',
        {
          className: (0, _clsx2.default)(classes.tableRowContainer, 'scTableRowContainer', {
            nested: hasNestedChildren
          })
        },
        _react2.default.createElement(
          'div',
          {
            id: id,
            className: (0, _clsx2.default)(classes.tableRow, className, { active: active }, classes[visibility], classes['paddingSize' + _utils2.default.toUpperLatter(paddingSize)], 'scTableRow'),
            onClick: this.handleClick
          },
          hasNestedChildren && _react2.default.createElement(
            'div',
            {
              className: (0, _clsx2.default)(classes.arrowContainer),
              style: { left: index > 1 ? (index - 1) * NESTING_PADDING : 0 }
            },
            _react2.default.createElement(_Icon2.default, {
              className: (0, _clsx2.default)(classes.arrow, { isOpen: showNestedChildren }, { active: active }, 'scTableRowArrow'),
              type: 'arrow',
              size: 'small',
              onClick: this.handleListIconClick,
              color: 'currentColor'
            })
          ),
          _react2.default.createElement(
            'div',
            { className: (0, _clsx2.default)(classes.tableList, 'scTableRowList') },
            _react2.default.Children.map(children, function (child, index) {
              return _react2.default.cloneElement(child, {
                ref: function ref(el) {
                  _this2['itemRef' + index] = el;
                },
                width: columnSize[index]
              });
            })
          )
        ),
        _react2.default.createElement(_Divider2.default, {
          className: (0, _clsx2.default)(classes['divider' + _utils2.default.toUpperLatter(paddingSize)], 'scTableRowDivider')
        }),
        showNestedChildren && _react2.default.createElement(
          'div',
          { className: classes.nestedChildrenContainer },
          renderNestedChildren(nestedChildren, index + 1, columnSize)
        )
      );
    }
  }]);
  return TableRow;
}(_react.PureComponent), _class2.contextTypes = {
  visibility: _propTypes2.default.oneOf(['visible', 'disabled', 'hidden']).isRequired,
  paddingSize: _propTypes2.default.oneOf(['small', 'medium']).isRequired
}, _temp)) || _class);


TableRow.defaultProps = {
  visibility: 'visible',
  value: {},
  nestedChildren: [],
  size: 0,
  index: 1,
  children: null,
  showNestedChildren: false,
  renderNestedChildren: function renderNestedChildren() {},
  onClick: function onClick() {},
  onChange: function onChange() {},
  columnSize: {}
};

TableRow.propTypes = {
  /** React-JSS injects a classes, which is a simple map of rule names and generated class names */
  classes: _propTypes2.default.object,
  /** additional class name */
  className: _propTypes2.default.string,
  /** table's visibility */
  visibility: _propTypes2.default.oneOf(['visible', 'disabled', 'hidden']),
  /** table's Content */
  children: _propTypes2.default.node,
  /** table's id */
  id: _propTypes2.default.string,
  /** table's nested Children */
  renderNestedChildren: _propTypes2.default.func,
  /** table's value */
  value: _propTypes2.default.object,
  /** table's value children */
  nestedChildren: _propTypes2.default.array,
  /** show children */
  showNestedChildren: _propTypes2.default.bool,
  /** nested index */
  index: _propTypes2.default.number,
  /** size children */
  size: _propTypes2.default.number,
  /** is active children */
  active: _propTypes2.default.bool,
  /** callback */
  onClick: _propTypes2.default.func,
  /** callback open list */
  onChange: _propTypes2.default.func,
  /** table's columnSize Content */
  columnSize: _propTypes2.default.object
};

exports.default = TableRow;