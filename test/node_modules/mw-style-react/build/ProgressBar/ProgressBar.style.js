'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (theme) {
  return {
    progressBar: {
      margin: 0,
      display: 'inline-block',
      color: theme.progressBar.color,
      '&.hidden': {
        display: 'none'
      }
    },
    line: {
      width: '100%'
    },
    lineWrap: {
      display: 'flex',
      flexDirection: 'column',
      overflow: 'hidden'
    },
    progressLineBackground: {
      backgroundColor: theme.progressBar.backgroundColor
    },
    progressLine: {
      backgroundColor: theme.progressBar.color,
      transition: theme.transition(['width']),
      '&.animation': {
        width: '20%',
        animation: 'line 1.4s linear infinite'
      }
    },
    '@keyframes line': {
      '0%': {
        marginLeft: '-20%'
      },
      '100%': {
        marginLeft: '100%'
      }
    },
    lineLabel: {
      textAlign: 'center'
    },
    circleWrap: {
      position: 'relative',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      transform: 'rotate(-90deg)'
    },
    circleLabel: {
      position: 'absolute',
      top: '50%',
      left: '50%',
      transform: 'translate(-50%, -50%) rotate(90deg)'
    },
    circleBackground: {},
    circleBar: {
      '& circle': {
        strokeDasharray: '80px, 200px',
        strokeDashoffset: '0px',
        stroke: 'currentColor',
        strokeLinecap: 'round',
        strokeWidth: theme.progressBar.strokeWidth
      },
      '& $circleBackground': {
        strokeDasharray: '200px',
        stroke: theme.progressBar.backgroundColor
      },
      '&.circleAnimation': {
        animation: 'circleRoot 1.4s linear infinite',
        '& circle': {
          animation: 'circleNested 1.4s ease-in-out infinite'
        }
      }
    },
    small: {
      '& $progressLine': {
        height: 1
      },
      '& $lineLabel': {
        fontSize: 10
      },
      '& $circleBar': {
        width: 20,
        height: 20
      },
      '& $circleLabel': {
        display: 'none'
      }
    },
    medium: {
      '& $progressLine': {
        height: 2
      },
      '& $lineLabel': {
        fontSize: 12
      },
      '& $circleBar': {
        width: 36,
        height: 36
      },
      '& $circleLabel': {
        fontSize: 8
      }
    },
    large: {
      '& $progressLine': {
        height: 4
      },
      '& $lineLabel': {
        fontSize: 14
      },
      '& $circleBar': {
        width: 66,
        height: 66,
        '& circle': {
          strokeWidth: theme.progressBar.strokeWidth / 1.3
        }
      },
      '& $circleLabel': {
        fontSize: 14
      }
    },
    xlarge: {
      '& $progressLine': {
        height: 6
      },
      '& $lineLabel': {
        fontSize: 16
      },
      '& $circleBar': {
        width: 100,
        height: 100,
        '& circle': {
          strokeWidth: theme.progressBar.strokeWidth / 1.5
        }
      }
    },
    '@keyframes circleRoot': {
      '100%': {
        transform: 'rotate(360deg)'
      }
    },
    '@keyframes circleNested': {
      '0%': {
        strokeDasharray: '1px, 200px',
        strokeDashoffset: '0px'
      },
      '50%': {
        strokeDasharray: '100px, 200px',
        strokeDashoffset: '-15px'
      },
      '100%': {
        strokeDasharray: '1px, 200px',
        strokeDashoffset: '-120px'
      }
    }
  };
};