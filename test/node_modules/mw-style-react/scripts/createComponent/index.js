import fs from 'fs';
import path from 'path';
import handlebars from 'handlebars';

/**
 * Make object for script arguments
 */
const argv = {};
const scriptArg = process.argv.slice(2);
scriptArg.forEach((arg) => {
  const split = arg.split('=');
  if (split.length === 2) {
    const key = split[0].replace('--', '');
    argv[key] = split[1];
  }
});
const data = {compName: argv.n};

/**
 * Compile template
 * @param file
 * @param data
 */
function compiledFile(file, data) {
  const tpl = fs.readFileSync(file).toString();
  const template = handlebars.compile(tpl);
  return template(data);
}

/**
 * Create folder with component
 * @param data
 */
function createComponent(data) {
  const pathToFolder = path.join(__dirname, './component_template');
  const distFolder = path.join(__dirname, `../../src/components/${data.compName}`);
  if (!fs.existsSync(distFolder)) {
    fs.mkdirSync(distFolder);
  }
  const files = fs.readdirSync(pathToFolder);
  files.forEach((fileName) => {
    const filePath = `${pathToFolder}/${fileName}`;
    const compFile = compiledFile(filePath, data);
    const newFileName = fileName
      .replace('.tpl', '')
      .replace('Component', data.compName);
    fs.writeFileSync(`${distFolder}/${newFileName}`, compFile);
  });
}

/**
 * Create path to new story
 * @param fileName
 */
function savePathToStory(fileName) {
  fileName = fileName.replace('.js', '');
  const storyString = `import \'../stories/${fileName}\';\n`;
  const storiesPath = path.join(__dirname, '../../.storybook/stories.js');
  const fileData = fs.readFileSync(storiesPath).toString();
  const newFileData = `${fileData}${storyString}`;
  fs.writeFileSync(storiesPath, newFileData);
}

/**
 * Add link to component in index.js file
 * @param data
 */
function addComponentToIndex(data) {
  const storyString = `export {default as ${data.compName}} from './${data.compName}';\n`;
  const storiesPath = path.join(__dirname, '../../src/components/index.js');
  const fileData = fs.readFileSync(storiesPath).toString();
  const newFileData = `${fileData}${storyString}`;
  fs.writeFileSync(storiesPath, newFileData);
}

/**
 * Create story
 * @param data
 */
function createStory(data) {
  const fileName = 'Component.js.tpl';
  const filePath = path.join(__dirname, `./story_template/${fileName}`);
  const distFolder = path.join(__dirname, '../../stories');
  const compFile = compiledFile(filePath, data);
  const newFileName = fileName
    .replace('.tpl', '')
    .replace('Component', data.compName.toLocaleLowerCase());
  fs.writeFileSync(`${distFolder}/${newFileName}`, compFile);
  savePathToStory(newFileName);
}

createComponent(data);
addComponentToIndex(data);
createStory(data);
