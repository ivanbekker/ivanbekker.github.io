'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _index = require('../../Icon/index');

var _index2 = _interopRequireDefault(_index);

var _index3 = require('../../Label/index');

var _index4 = _interopRequireDefault(_index3);

var _ListItem = require('./ListItem.style');

var _ListItem2 = _interopRequireDefault(_ListItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ListItem = (_dec = (0, _reactJss2.default)(_ListItem2.default), _dec(_class = function (_PureComponent) {
  (0, _inherits3.default)(ListItem, _PureComponent);

  function ListItem(props) {
    (0, _classCallCheck3.default)(this, ListItem);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ListItem.__proto__ || (0, _getPrototypeOf2.default)(ListItem)).call(this, props));

    _this.state = {
      showNested: false
    };
    _this.toggleNestedList = _this.toggleNestedList.bind(_this);
    _this.handleClick = _this.handleClick.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(ListItem, [{
    key: 'handleClick',
    value: function handleClick(e) {
      var _props = this.props,
          rootId = _props.rootId,
          value = _props.value,
          activeItem = _props.activeItem,
          onClick = _props.onClick;

      e.preventDefault();
      e.stopPropagation();
      if (activeItem === value) return;
      onClick({ id: rootId, value: value, error: false });
    }
  }, {
    key: 'toggleNestedList',
    value: function toggleNestedList(e) {
      var showNested = this.state.showNested;

      e.preventDefault();
      e.stopPropagation();
      this.setState({ showNested: !showNested });
    }
  }, {
    key: 'renderNestedList',
    value: function renderNestedList() {
      var _props2 = this.props,
          rootId = _props2.rootId,
          classes = _props2.classes,
          children = _props2.children,
          activeItem = _props2.activeItem,
          offset = _props2.offset,
          onClick = _props2.onClick;
      var showNested = this.state.showNested;

      var newOffset = offset + 24;
      var ch = _react2.default.Children.map(children, function (child) {
        return _react2.default.cloneElement(child, { id: rootId, activeItem: activeItem, offset: newOffset, onClick: onClick });
      });
      return _react2.default.createElement(
        'div',
        { className: (0, _clsx2.default)(classes.nested, { show: showNested }) },
        ch
      );
    }
  }, {
    key: 'renderArrow',
    value: function renderArrow(classes, children) {
      var showNested = this.state.showNested;

      if (!children) {
        return _react2.default.createElement('div', { className: classes.emptyArrow });
      }
      return _react2.default.createElement(
        'div',
        { className: (0, _clsx2.default)(classes.arrow, { show: showNested }), onClick: this.toggleNestedList },
        _react2.default.createElement(_index2.default, { type: 'arrow', size: 'small' })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          classes = _props3.classes,
          id = _props3.id,
          value = _props3.value,
          className = _props3.className,
          label = _props3.label,
          leftIcon = _props3.leftIcon,
          activeItem = _props3.activeItem,
          offset = _props3.offset,
          children = _props3.children;

      var chClasses = (0, _clsx2.default)(className, classes.listItem, { active: activeItem === value });

      return _react2.default.createElement(
        'div',
        { id: id, className: chClasses, onClick: this.handleClick },
        _react2.default.createElement(
          'div',
          { className: classes.row, style: { paddingLeft: offset } },
          this.renderArrow(classes, children),
          leftIcon ? _react2.default.createElement(_index2.default, { className: classes.leftIcon, type: leftIcon }) : null,
          _react2.default.createElement(_index4.default, { className: classes.label, value: label })
        ),
        this.renderNestedList()
      );
    }
  }]);
  return ListItem;
}(_react.PureComponent)) || _class);


ListItem.defaultProps = {
  visibility: 'visible',
  error: false,
  active: false,
  onClick: function onClick() {}
};

ListItem.propTypes = {
  classes: _propTypes2.default.object,
  /** label's id */
  label: _propTypes2.default.string.isRequired,
  /** List's rootId */
  rootId: _propTypes2.default.string,
  /** List's id */
  id: _propTypes2.default.string,
  /** additional external class name */
  className: _propTypes2.default.string,
  /** List's value */
  value: _propTypes2.default.string.isRequired,
  /** List's options */
  children: _propTypes2.default.node,
  /** listItem's id */
  leftIcon: _propTypes2.default.string,
  /** active item */
  activeItem: _propTypes2.default.string,
  /** offset of nested list */
  offset: _propTypes2.default.number,
  /** onClick callback */
  onClick: _propTypes2.default.func
};

exports.default = ListItem;