'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

var _ProgressBar = require('./ProgressBar.style');

var _ProgressBar2 = _interopRequireDefault(_ProgressBar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProgressBar = (_dec = (0, _reactJss2.default)(_ProgressBar2.default), _dec(_class = function (_PureComponent) {
  (0, _inherits3.default)(ProgressBar, _PureComponent);

  function ProgressBar() {
    (0, _classCallCheck3.default)(this, ProgressBar);
    return (0, _possibleConstructorReturn3.default)(this, (ProgressBar.__proto__ || (0, _getPrototypeOf2.default)(ProgressBar)).apply(this, arguments));
  }

  (0, _createClass3.default)(ProgressBar, [{
    key: 'calcCirclePercent',
    value: function calcCirclePercent(r, value) {
      if (!value) return {};
      var cLen = Math.PI * (r * 2);
      var per = value / 100 * cLen;
      return {
        strokeDasharray: per + 'px, 200px',
        strokeDashoffset: '0px'
      };
    }
  }, {
    key: 'correctValue',
    value: function correctValue(value) {
      // correct value min 0, max 100;
      var min = 0;
      var max = 100;
      if (value < min) value = min;
      if (value > max) value = max;
      // check for a number
      if (!Number(value)) value = false;

      return value;
    }
  }, {
    key: 'renderCircle',
    value: function renderCircle(classes, value) {
      var cls = (0, _clsx2.default)(classes.circleBar, { circleAnimation: !value });
      var r = 20;
      var styleProgress = this.calcCirclePercent(r, value);
      return _react2.default.createElement(
        'div',
        { className: classes.circleWrap },
        _react2.default.createElement(
          'svg',
          { className: cls, viewBox: '0 0 50 50' },
          value ? _react2.default.createElement('circle', { cx: '25', cy: '25', r: r, fill: 'none', className: classes.circleBackground }) : null,
          _react2.default.createElement('circle', { cx: '25', cy: '25', r: r, fill: 'none', style: styleProgress })
        ),
        value ? _react2.default.createElement(_Label2.default, { className: classes.circleLabel, value: value + '%' }) : null
      );
    }
  }, {
    key: 'renderLine',
    value: function renderLine(classes, value) {
      return _react2.default.createElement(
        'div',
        { className: classes.lineWrap },
        _react2.default.createElement(
          'div',
          { className: classes.progressLineBackground },
          _react2.default.createElement('div', {
            className: (0, _clsx2.default)(classes.progressLine, { animation: !value }),
            style: { width: value + '%' }
          })
        ),
        value ? _react2.default.createElement(_Label2.default, { className: classes.lineLabel, value: value + '%' }) : null
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          id = _props.id,
          classes = _props.classes,
          className = _props.className,
          size = _props.size,
          type = _props.type,
          value = _props.value,
          visibility = _props.visibility;

      var corValue = this.correctValue(value);

      return _react2.default.createElement(
        'div',
        {
          id: id,
          className: (0, _clsx2.default)(className, classes.progressBar, classes[size], classes[type], {
            hidden: visibility === 'hidden'
          })
        },
        type === 'circle' ? this.renderCircle(classes, corValue, size) : this.renderLine(classes, corValue)
      );
    }
  }]);
  return ProgressBar;
}(_react.PureComponent)) || _class);


ProgressBar.defaultProps = {
  visibility: 'visible',
  type: 'circle',
  size: 'medium'
};

ProgressBar.propTypes = {
  classes: _propTypes2.default.object,
  /** ProgressBar's visibility */
  visibility: _propTypes2.default.oneOf(['visible', 'hidden']),
  /** additional external class name */
  className: _propTypes2.default.string,
  /** ProgressBar's id */
  id: _propTypes2.default.string,
  /** ProgressBar's type */
  type: _propTypes2.default.string,
  /** ProgressBar's size */
  size: _propTypes2.default.string,
  /** ProgressBar's value for type "loader" */
  value: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])
};

exports.default = ProgressBar;