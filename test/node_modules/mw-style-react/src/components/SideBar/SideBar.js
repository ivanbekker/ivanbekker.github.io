import PropTypes from 'prop-types';
import React, {PureComponent} from 'react';
import injectSheet from 'react-jss';
import Menu from '../Menu';
import styles from './SideBar.style';

@injectSheet(styles)
class SideBar extends PureComponent {
  render() {
    const {classes, visibility, id, children, activeItem, onClick, className} = this.props;
    return (
      <Menu
        id={id}
        type="sideBar"
        className={`${className} ${classes.sidebar}`}
        visibility={visibility}
        activeItem={activeItem}
        onClick={onClick}
      >
        {React.Children.map(children, child => {
          if (child.type.displayName === 'Jss(MenuItem)') {
            return React.cloneElement(child, {
              className: classes.menuItem,
            });
          }
          // for NavLink wrapper
          return React.cloneElement(child, {
            className: classes.navMenuItem,
          });
        })}
      </Menu>
    );
  }
}

SideBar.defaultProps = {
  visibility: 'visible',
  onClick: () => {
  },
};

SideBar.propTypes = {
  classes: PropTypes.object,
  /** SideBar's visibility */
  visibility: PropTypes.oneOf(['visible', 'disabled', 'hidden']).isRequired,
  /** SideBar's id */
  id: PropTypes.string,
  /** active item */
  activeItem: PropTypes.string,
  /** sidBar's options */
  children: PropTypes.node.isRequired,
  /** onClick callback */
  onClick: PropTypes.func,
  /** additional class */
  className: PropTypes.string,
};

export default SideBar;
