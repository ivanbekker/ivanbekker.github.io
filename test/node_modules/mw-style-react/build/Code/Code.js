'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

var _Code = require('./Code.style');

var _Code2 = _interopRequireDefault(_Code);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Code = (_dec = (0, _reactJss2.default)(_Code2.default), _dec(_class = function (_PureComponent) {
  (0, _inherits3.default)(Code, _PureComponent);

  function Code(props) {
    (0, _classCallCheck3.default)(this, Code);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Code.__proto__ || (0, _getPrototypeOf2.default)(Code)).call(this, props));

    _this.state = {
      copied: false
    };
    _this.copy = _this.copy.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Code, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      this._isMounted = true;
      var forwardRef = this.props.forwardRef;

      this.source = forwardRef || _react2.default.createRef();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this._isMounted = false;
    }
  }, {
    key: 'copy',
    value: function copy(e) {
      var _this2 = this;

      var _props = this.props,
          onCopy = _props.onCopy,
          visibility = _props.visibility;

      if (!this._isMounted || visibility === 'disabled') return;
      if (onCopy) {
        onCopy(e);
        return;
      }

      var range = void 0;
      var selection = void 0;
      if (document.body.createTextRange) {
        range = document.body.createTextRange();
        range.moveToElementText(this.source.current);
        range.select();
      } else if (window.getSelection) {
        selection = window.getSelection();
        range = document.createRange();
        range.selectNodeContents(this.source.current);
        selection.removeAllRanges();
        selection.addRange(range);
      }
      document.execCommand('copy');
      this.setState({ copied: true });
      setTimeout(function () {
        if (!_this2._isMounted) return;
        _this2.setState({ copied: false });
      }, 2000);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props,
          classes = _props2.classes,
          className = _props2.className,
          id = _props2.id,
          visibility = _props2.visibility,
          value = _props2.value,
          label = _props2.label,
          buttonLabel = _props2.buttonLabel;


      var coClasses = (0, _clsx2.default)(className, classes.code, { hidden: visibility === 'hidden' }, { disabled: visibility === 'disabled' });
      return _react2.default.createElement(
        'div',
        { id: id, className: coClasses },
        _react2.default.createElement(_Label2.default, { className: classes.label, value: label }),
        _react2.default.createElement(
          'div',
          { className: classes.source },
          _react2.default.createElement(
            'pre',
            { className: classes.pre, ref: this.source },
            _react2.default.createElement(
              'code',
              { className: classes.value },
              value
            )
          ),
          _react2.default.createElement(_Button2.default, {
            className: classes.btn,
            size: 'small',
            label: buttonLabel,
            onClick: this.copy,
            icon: this.state.copied ? 'check' : null
          })
        )
      );
    }
  }]);
  return Code;
}(_react.PureComponent)) || _class);


Code.defaultProps = {
  visibility: 'visible',
  buttonLabel: 'Copy'
};

Code.propTypes = {
  classes: _propTypes2.default.object,
  /** Code's visibility */
  visibility: _propTypes2.default.oneOf(['visible', 'disabled', 'hidden']).isRequired,
  /** Code's id */
  id: _propTypes2.default.string,
  /** additional external class name */
  className: _propTypes2.default.string,
  /** Code's value */
  value: _propTypes2.default.string,
  /** Code's label */
  label: _propTypes2.default.string,
  /** Code's copy button text */
  buttonLabel: _propTypes2.default.string,
  /** Code's onCopy */
  onCopy: _propTypes2.default.string,
  /** Use that property to pass a ref callback to the native input component. */
  forwardRef: _propTypes2.default.object
};

exports.default = Code;