import PropTypes from 'prop-types';
import React, {PureComponent} from 'react';
import injectSheet from 'react-jss';
import cn from 'clsx';
import ReactCSSTransitionGroup from 'react-addons-css-transition-group';
import styles from './Notify.style';
import NotifyItem from './NotifyItem';

@injectSheet(styles)
class Notify extends PureComponent {
  render() {
    const {value, onClose, className, classes} = this.props;
    const reversedValue = value.slice(0).reverse();
    return (
      <div className={cn(classes.notify, className)}>
        <ReactCSSTransitionGroup
          transitionName={{
            enter: classes.animEnter,
            enterActive: classes.animEnterActive,
            leave: classes.animExit,
            leaveActive: classes.animExitActive,
          }}
          transitionEnterTimeout={500}
          transitionLeaveTimeout={500}
        >
          {reversedValue.map(item => (
            <NotifyItem key={item.id} onClose={onClose} {...item} />
          ))}
        </ReactCSSTransitionGroup>
      </div>
    );
  }
}

Notify.defaultProps = {
  onClose: () => {
  },
  value: [],
};

Notify.propTypes = {
  classes: PropTypes.object,
  /** additional external class name */
  className: PropTypes.string,
  /** Notify's value array with NotifyItem props object */
  value: PropTypes.array,
  /** onClose callback */
  onClose: PropTypes.func,
};

export default Notify;
