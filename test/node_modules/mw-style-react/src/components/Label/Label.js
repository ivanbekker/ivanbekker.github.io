import PropTypes from 'prop-types';
import React, {PureComponent} from 'react';
import injectSheet from 'react-jss';
import cn from 'clsx';
import styles from './Label.style';

@injectSheet(styles)
class Label extends PureComponent {
  render() {
    const {
      classes,
      fontSize,
      fontWeight,
      textColor,
      className,
      value,
      id,
      error,
      visibility,
      onClick,
      onMouseEnter,
      onMouseLeave,
    } = this.props;

    return (
      <span
        id={id}
        className={cn(
          className,
          classes.label,
          classes[fontSize],
          classes[fontWeight],
          {error: !!error},
          {hidden: visibility === 'hidden'},
          {disabled: visibility === 'disabled'},
        )}
        style={{color: textColor}}
        onClick={onClick}
        onMouseEnter={onMouseEnter}
        onMouseLeave={onMouseLeave}
      >
        {value}
      </span>
    );
  }
}

Label.defaultProps = {
  fontSize: 'medium',
  fontWeight: 'normal',
  visibility: 'visible',
  error: false,
  onClick: () => {
  },
  onMouseEnter: () => {
  },
  onMouseLeave: () => {
  },
};

Label.propTypes = {
  classes: PropTypes.object,
  /** label size */
  fontSize: PropTypes.oneOf(['xsmall', 'small', 'medium', 'large', 'xlarge']),
  /** label weight */
  fontWeight: PropTypes.oneOf(['normal', 'semibold']),
  /** label's visibility */
  visibility: PropTypes.oneOf(['visible', 'disabled', 'hidden']),
  /** Does label have an error */
  error: PropTypes.bool,
  /** label custom color */
  textColor: PropTypes.string,
  /** label's value */
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),
  /** label's id */
  id: PropTypes.string,
  /** additional external class name */
  className: PropTypes.string,
  /** label callback */
  onClick: PropTypes.func,
  /** callback onMouseEnter */
  onMouseEnter: PropTypes.func,
  /** callback onMouseLeave */
  onMouseLeave: PropTypes.func,
};

export default Label;
