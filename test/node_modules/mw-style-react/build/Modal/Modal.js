'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactJss = require('react-jss');

var _reactJss2 = _interopRequireDefault(_reactJss);

var _clsx = require('clsx');

var _clsx2 = _interopRequireDefault(_clsx);

var _Modal = require('./Modal.style');

var _Modal2 = _interopRequireDefault(_Modal);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Modal = (_dec = (0, _reactJss2.default)(_Modal2.default), _dec(_class = function (_PureComponent) {
  (0, _inherits3.default)(Modal, _PureComponent);

  function Modal(props) {
    (0, _classCallCheck3.default)(this, Modal);

    var _this = (0, _possibleConstructorReturn3.default)(this, (Modal.__proto__ || (0, _getPrototypeOf2.default)(Modal)).call(this, props));

    _this.state = {
      mountStyle: !!props.visibility,
      show: true
    };
    _this.transitionEnd = _this.transitionEnd.bind(_this);
    _this.onModalClick = _this.onModalClick.bind(_this);
    _this.onKeyDown = _this.onKeyDown.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(Modal, [{
    key: 'componentWillMount',
    value: function componentWillMount() {
      document.addEventListener('keydown', this.onKeyDown);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      document.removeEventListener('keydown', this.onKeyDown);
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this2 = this;

      if (!nextProps.visibility) {
        this.setState({ mountStyle: false });
      } else {
        this.setState({ show: true });
        setTimeout(function () {
          return _this2.setState({ mountStyle: true });
        }, 10);
      }
    }
  }, {
    key: 'transitionEnd',
    value: function transitionEnd() {
      var visibility = this.props.visibility;

      if (!visibility) {
        this.setState({ show: false });
      }
    }
  }, {
    key: 'onModalClick',
    value: function onModalClick(e) {
      e.stopPropagation();
    }
  }, {
    key: 'onKeyDown',
    value: function onKeyDown(e) {
      var onClose = this.props.onClose;

      var isEsc = e.key === 'Escape';
      if (isEsc) onClose();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          classes = _props.classes,
          className = _props.className,
          size = _props.size,
          id = _props.id,
          children = _props.children,
          label = _props.label,
          onClose = _props.onClose;
      var _state = this.state,
          visible = _state.mountStyle,
          show = _state.show;

      var bgClasses = (0, _clsx2.default)(classes.bg, { visible: visible });
      var modalClasses = (0, _clsx2.default)(className, classes[size], classes.modal, { visible: visible });

      return show ? _react2.default.createElement(
        'div',
        { id: id, className: bgClasses, onTransitionEnd: this.transitionEnd, onClick: onClose },
        _react2.default.createElement(
          'div',
          { className: modalClasses, onClick: this.onModalClick },
          label ? _react2.default.createElement(_Label2.default, { fontWeight: 'semibold', fontSize: 'large', value: label, className: classes.label }) : null,
          children
        )
      ) : null;
    }
  }]);
  return Modal;
}(_react.PureComponent)) || _class);


Modal.defaultProps = {
  visibility: true,
  size: 'medium',
  onClose: function onClose() {}
};

Modal.propTypes = {
  classes: _propTypes2.default.object,
  /** icon's size */
  size: _propTypes2.default.oneOf(['small', 'medium', 'large']),
  /** Modal's visibility */
  visibility: _propTypes2.default.bool,
  /** additional external class name */
  className: _propTypes2.default.string,
  /** Modal's id */
  id: _propTypes2.default.string,
  /** children */
  children: _propTypes2.default.node,
  /** Modal's label */
  label: _propTypes2.default.string,
  /** onClose callback */
  onClose: _propTypes2.default.func
};

exports.default = Modal;